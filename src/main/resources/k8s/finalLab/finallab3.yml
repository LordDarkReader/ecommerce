apiVersion: v1
kind: ServiceAccount
metadata:
  name:  deployment-admin-service-account
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default
  name: pod-reader
rules:
- apiGroups: [""] 
  resources: ["pods"]
  verbs: ["get", "list"]  
- apiGroups: ["batch"] 
  resources: ["cronjobs"]
  verbs: ["get"]  
- apiGroups: ["apps"] 
  resources: ["deployments"]
  verbs: ["get"]    
---  
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pod-reader
  namespace: default
subjects:
- kind: ServiceAccount
  name: deployment-admin-service-account 
  apiGroup: ""
  namespace: default
roleRef:
  kind: Role 
  name: pod-reader 
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  deploy
  namespace: default
  labels:
    app:  deploy
spec:
  selector:
    matchLabels:
      app: deploy
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app:  deploy
    spec:
      serviceAccountName: deployment-admin-service-account
      containers:
      - name:  deploy
        image:  devopslabss/registry-secret:rbac
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort:  80
          name:  deploy
        command: ["/bin/sh", "-c", "sleep infinity"]
--- 
apiVersion: v1
data:
  pass: ZmlzZmlzZmlz
kind: Secret
metadata:
  name: env-vars 
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: cronjobsleep
  namespace: default
spec:
  schedule: "*/1 * * * *"
  successfulJobsHistoryLimit: 0
  failedJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: cronjobsleep
            image: ubuntu
            args: ['/bin/sh', '-c', 'kubectl get pods, deployments, cronjobs']
          restartPolicy: Never      